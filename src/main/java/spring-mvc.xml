<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--配置数据库-->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:jdbc.properties"/>

    <!-- 自动扫描该包 -->
    <context:component-scan base-package="org.shopping"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 开发阶段数据库最大连接数建议设置小一点够用即可，设置为3 -->
        <property name="maxPoolSize" value="${jdbc.maxActive}"/>
        <property name="maxIdleTime" value="${jdbc.maxIdle}"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="org.shopping.dao"/>
    </bean>

    <!-- sqlSessionFactory 配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="configLocation" value="classpath:/mybatis-config.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!-- config params as the following -->
                        <value>
                            dialect=hsqldb
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>


    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
    <!--开启RequestMapping注解-->
    <mvc:annotation-driven/>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <mvc:view-controller path="/" view-name="redirect:/user/loginBegin"/>

    <!-- mvc注解 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <!-- 避免出现乱码 -->
                <constructor-arg value="UTF-8" index="0"/>
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8"/>
            </bean>
            <!-- 避免IE出现下载json情况 -->
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
    <!--<property name="order" value="1"></property>-->
    <!--<property name="mediaTypes">-->
    <!--<map>-->
    <!--&lt;!&ndash; 告诉视图解析器，返回的类型为json格式 &ndash;&gt;-->
    <!--<entry key="json" value="application/json"/>-->
    <!--<entry key="xml" value="application/xml"/>-->
    <!--<entry key="htm" value="text/htm"/>-->
    <!--</map>-->
    <!--</property>-->
    <!--<property name="defaultViews">-->
    <!--<list>-->
    <!--&lt;!&ndash; ModelAndView里的数据变成JSON &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


</beans>